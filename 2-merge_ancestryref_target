########## Mergir dados alvo e de referencia de ancestralidade

####### baixar os dados de ancestralidade do 1KGenomes 


#### dados já baixados de: https://gnomad.broadinstitute.org/downloads#v3-hgdp-1kg
### HGDP +1KGenomes callset - ir para os dados divididos por cromossomos - realizei um qc na conversao de vcf para bed, bim e fam com: 
(levar esse dado para ser usado)

#### se baixar dessa forma baixa em vcf, separado por cromossomos e é preciso transformar em bed, bim e fam 
## A flag --keep-allele-order precisa ser usada no plink 1.9, pois se não usar, ele muda a ordem dos alelos, se usar plink2 não precisa 
## fazer um controle de qualidade bem basico - mudar os caminhos de pasta de acordo com o seu computador 

#######for i in {1..22}; do plink --vcf ./phased_1kg_hgdp/QC_phased_gnomad.genomes.v3.1.2.hgdp_tgp.chr${i}.vcf.gz --keep-allele-order --const-fid 0 --maf 0.01 --make-bed --out ./REF_1kg_hgdp/1kg_hgdp_chr${i}; done

### Para iniciar iremos ver a pasta que estão todos os dados
### Dentro desta pasta teremos subpastas, uma com as amostras referência, outra com as amostras alvo

###fazendo as pastas de trabalho
mkdir ../"pasta_trabalho_central"/admixture


ref_plink_file=""
alvo_plink_file=""
prefix_alvo=""
prefix_ref=""
output_merged=""
folder_alvo=""
folder_ref=""
file_intermed_alvo=""
file_intermed_ref=""
file_intermed_merge=""
file_merged=""
plink=""

### Se certificar que alvo e ref estão com o arquivo bim igual
### como no meu caso a ref está com chr, pos, alelo 1 e alelo 2 e alvo está com chr pos, vou deixar os dois com chr pos 

## Ref 3 anc 
###copiar o bim para um arquivo "_ori" e depois de editar, salvar como estava antes 
cp "$ref_plink_file.bim" "$ref_plink_file_ori.bim"
awk '{print $1, $1":"$4, $3, $4, $5, $6}' "$ref_plink_file_ori.bim" > "$ref_plink_file.bim"

### Se for preciso fazer o mesmo pro alvo 
cp "$ref_plink_file.bim" "$ref_plink_file_ori.bim"
awk '{print $1, $1":"$4, $3, $4, $5, $6}' "$ref_plink_file_ori.bim" > "$ref_plink_file.bim"

### Separar alvo por cromossomos (se ainda não estiver) e listar posições duplicadas 

for i in {1..22}; do "$plink" --bfile "$alvo_plink_file" --chr ${i} --make-bed --out "${alvo_plink_file}_chr${i}"; done
for i in {1..22}; do "$plink" --bfile "${alvo_plink_file}_chr${i}" --list-duplicate-vars --out "${file_intermed}_chr${i}" ; done

###### dar um head nos arquivos para ver se de fato criou os arquivos com as variantes duplicadas

###### se criou: 

for i in {1..22}; do "$plink" --bfile "${alvo_plink_file}_chr${i}" --exclude "${file_intermed_alvo}_chr${i}.dupvar" --make-bed --out "${file_intermed_alvo}_chr${i}_semdups"; done

########## se tiver excluido as pos duplicadas, precisa usar a sintaze desse arquivo pra juntar depoois, se nao, usar o arquivo anterior normalmente 


############################# usando o arquivo sem dups - se tiver excluido 

#Garantindo o mesmo num de SNPS nos dois arquivos e garantindos que nao há alelos trocados

for i in {1..22}; do plink --bfile "${ref_plink_file}_chr${i}" --extract "${file_intermed_alvo}_chr${i}_semdups.bim" --make-bed --out "${file_intermed_ref}_chr${i}_pre2"; done

for i in {1..22}; do plink --bfile "${file_intermed_alvo}_chr${i}_semdups" --extract --bfile "${ref_plink_file}_chr${i}.bim" --make-bed --out "${file_intermed_alvo}_chr${i}_pre2"


############################# se não tiver excluído dup 

for i in {1..22}; do plink --bfile "${ref_plink_file}_chr${i}" --extract  "${alvo_plink_file}_chr${i}.bim" --make-bed --out "${file_intermed_ref}_chr${i}_pre2"; done

for i in {1..22}; do plink --bfile "${alvo_plink_file}_chr${i}" --extract --bfile "${ref_plink_file}_chr${i}.bim" --make-bed --out "${file_intermed_alvo}_chr${i}_pre2"





#Extraindo as multialelicas antes de realizar o merge - provavelmente nao tem mas faço dessa forma para garantir

for i in {1..22}; do plink --bfile "${file_intermed_ref}_chr${i}_pre2" --snps-only just-acgt --make-bed --out "${file_intermed_ref}_chr${i}_pre"; done

for i in {1..22}; do plink --bfile  "${file_intermed_alvo}_chr${i}_pre2" --snps-only just-acgt --make-bed --out "${file_intermed_alvo}_chr${i}_pre"; done




Juntar os arquivos, alvo e referência

### se der problema, colocar a flag allow no sex

for i in {1..22}; do plink --bfile "${file_intermed_ref}_chr${i}_pre" --bmerge "${file_intermed_alvo}_chr${i}_pre" --make-bed --out "${file_intermed_merge}_chr${i}_pre"; done

# Juntando e fazendo o QC para ser utilizado depois para o ADMIXTURE.
#Juntar os arquivos, alvo e referência

########## tentando juntar 

###### Se der problema em pouca gente: excluir 
###Se der em muita gente: flip 

### flipando uma das fitas
for i in {1..22}; do plink --bfile "${file_intermed_alvo}_chr${i}_pre" --flip "${file_intermed_merge}_chr${i}_pre-merge.missnp" --make-bed --out "${file_intermed_alvo}_chr${i}_flipado"; done


### tentando juntar 
# provavelmente vai dar problema em mais alguns snps

for i in {1..22}; do plink --bfile "${file_intermed_alvo}_chr${i}_flipado" --bmerge "${file_intermed_ref}_chr${i}_pre" --make-bed --out "${file_intermed_merge}_chr${i}_pre2"; done


#### excluindo as variantes que deram problema

##### se não tiver dado esse problema em todos os cromossomos, é melhor fazer 1 por 1, e nao um loop de cromossomos 

for i in {1..22}; do plink --bfile "${file_intermed_alvo}_chr${i}_flipado" --exclude "${file_intermed_merge}_chr${i}_pre2-merge.missnp" --make-bed --out "${file_intermed_alvo}_chr${i}_flip_excl"; done

####### LEMBRAR QUE: SE nao tiver dado problema em todos os chr, nao vai gerar o "flip_excl" pra todos os cromossomos, então precisa copiar os chrs que nao precisaram para a mesma terminação:
##### assim fica igual e a gente consegue juntar

cp  "${file_intermed_alvo}_chr(COLOCAR)_flipado"  "${file_intermed_alvo}_chr${COLOCAR}_flip_excl"


##### agora juntando e fazendo um controle de qualidade pro arquivo final juntado 
# juntando
for i in {1..22}; do plink --bfile "${file_intermed_alvo}_chr${i}_flip_excl" --bmerge "${file_intermed_ref}_chr${i}_pre" --make-bed --out "${file_merged}_chr${i}_preQC"; done

##### controle de qualidade
for i in {1..22}; do plink --bfile "${file_merged}_chr${i}_preQC" --maf 0.01 --geno 0.01 --mind 0.01 --make-bed --out "${file_merged}_chr${i}_QCed"; done


########## Agora juntando os cromossomos 

####Aqui eu faço uma lista com os nomes dos arquivos
for i in {1..22}; do echo  "${file_intermed_merge}_chr${i}_QCed" >> mergelist.txt; done


for i in {1..22}; do plink --merge-list mergelist.txt --make-bed --out "${file_intermed_merge}_allchr_QCed"; done


